From 645642cbf877949d756444805e9da89dcef902de Mon Sep 17 00:00:00 2001
From: gord chung <gord@live.ca>
Date: Thu, 7 Dec 2017 21:11:19 +0000
Subject: [PATCH 73/91] cleanup admin-guide architecture

- remove reference to api
- remove dup details on compute, central, ipmi already in data
collection
- remove hbase from panko support
- remove listing libvirt hypervisors, we only test kvm/qemu.
- remove generic listing of 'OpenStack Networking' meters. we already
have a measurements page for this
- remove user, roles, projects notes. we don't have api and it
means very little as is

Change-Id: I292cdd9297549ab8cb78caf6b15941b3986ca898
(cherry picked from commit 5b85f02bd6d099ccf5e6c450cff70c4722c1487c)
---
 doc/source/admin/telemetry-system-architecture.rst | 82 +++++-----------------
 1 file changed, 19 insertions(+), 63 deletions(-)

diff --git a/doc/source/admin/telemetry-system-architecture.rst b/doc/source/admin/telemetry-system-architecture.rst
index 25ca4be..91061cb 100644
--- a/doc/source/admin/telemetry-system-architecture.rst
+++ b/doc/source/admin/telemetry-system-architecture.rst
@@ -5,10 +5,10 @@ System architecture
 ===================
 
 The Telemetry service uses an agent-based architecture. Several modules
-combine their responsibilities to collect data, store samples in a
-database, or provide an API service for handling incoming requests.
+combine their responsibilities to collect, normalize, and redirect data
+to be used for use cases such as metering, monitoring, and alerting.
 
-The Telemetry service is built from the following agents and services:
+The Telemetry service is built from the following agents:
 
 ceilometer-api (deprecated in Ocata)
     Presents aggregated metering data to consumers (such as billing
@@ -18,12 +18,14 @@ ceilometer-api (deprecated in Ocata)
 ceilometer-polling
     Polls for different kinds of meter data by using the polling
     plug-ins (pollsters) registered in different namespaces. It provides a
-    single polling interface across different namespaces. The ``compute``
-    namespace polls the local hypervisor to acquire performance data of local
-    instances. The ``central`` namespace polls the public RESTful APIs of other
-    OpenStack services such as Compute service and Image service. The ``ipmi``
-    namespace polls the local node with IPMI support, in order to acquire IPMI
-    sensor data and Intel Node Manager datahost-level information.
+    single polling interface across different namespaces.
+
+.. note::
+
+   The ``ceilometer-polling`` service provides polling support on any
+   namespace but many distributions continue to provide namespace-scoped
+   agents: ``ceilometer-agent-central``, ``ceilometer-agent-compute``,
+   and ``ceilometer-agent-ipmi``.
 
 ceilometer-agent-notification
     Consumes AMQP messages from other OpenStack services, normalizes messages,
@@ -48,7 +50,7 @@ Except for the ``ceilometer-polling`` agents polling the ``compute`` or
 ``ipmi`` namespaces, all the other services are placed on one or more
 controller nodes.
 
-The Telemetry architecture highly depends on the AMQP service both for
+The Telemetry architecture depends on the AMQP service both for
 consuming notifications coming from OpenStack services and internal
 communication.
 
@@ -84,8 +86,6 @@ The list of supported base back ends for events:
 
 -  `PostgreSQL <http://www.postgresql.org/>`__
 
--  `HBase <http://hbase.apache.org/>`__
-
 
 .. _telemetry-supported-hypervisors:
 
@@ -98,67 +98,23 @@ compute hosts.
 
 The following is a list of supported hypervisors.
 
--  The following hypervisors are supported via `libvirt <http://libvirt.org/>`__
-
-   *  `Kernel-based Virtual Machine (KVM) <http://www.linux-kvm.org/page/Main_Page>`__
-
-   *  `Quick Emulator (QEMU) <http://wiki.qemu.org/Main_Page>`__
-
-   *  `Linux Containers (LXC) <https://linuxcontainers.org/>`__
-
-   *  `User-mode Linux (UML) <http://user-mode-linux.sourceforge.net/>`__
-
-   .. note::
-
-      For details about hypervisor support in libvirt please check the
-      `Libvirt API support matrix <http://libvirt.org/hvsupport.html>`__.
-
+-  `Libvirt supported hypervisors <http://libvirt.org/>`__ such as KVM and QEMU
 -  `Hyper-V <http://www.microsoft.com/en-us/server-cloud/hyper-v-server/default.aspx>`__
-
 -  `XEN <http://www.xenproject.org/help/documentation.html>`__
-
 -  `VMware vSphere <https://www.vmware.com/support/vsphere-hypervisor.html>`__
 
+.. note::
 
-Supported networking services
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-Telemetry is able to retrieve information from OpenStack Networking and
-external networking services:
-
--  OpenStack Networking:
-
-   -  Basic network meters
+   For details about hypervisor support in libvirt please see the
+   `Libvirt API support matrix <http://libvirt.org/hvsupport.html>`__.
 
-   -  Firewall-as-a-Service (FWaaS) meters
 
-   -  Load-Balancer-as-a-Service (LBaaS) meters
+Supported networking services
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-   -  VPN-as-a-Service (VPNaaS) meters
+Telemetry is able to retrieve information from external networking services:
 
 -  SDN controller meters:
 
    -  `OpenDaylight <https://www.opendaylight.org/>`__
-
    -  `OpenContrail <http://www.opencontrail.org/>`__
-
-
-.. _telemetry-users-roles-projects:
-
-Users, roles, and projects
-~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-This service of OpenStack uses OpenStack Identity for authenticating and
-authorizing users. The required configuration options are listed in the
-`Telemetry section
-<https://docs.openstack.org/ocata/config-reference/telemetry.html>`__ in the
-OpenStack Configuration Reference. Alternatively, gnocchi can be configured
-without authentication to minimize overhead.
-
-The system uses two roles:``admin`` and ``non-admin``. The authorization
-happens before processing each API request. The amount of returned data
-depends on the role the requestor owns.
-
-The creation of alarm definitions also highly depends on the role of the
-user, who initiated the action. Further details about :ref:`telemetry-alarms`
-handling can be found in this guide.
-- 
2.7.4

